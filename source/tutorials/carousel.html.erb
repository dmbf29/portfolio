<% set_meta_tags(project_name: 'Side Scrolling Carousel', title: 'Side Scrolling Carousel', description: 'How to install Owl Carousel')  %>
<div class="nav-group">
  <i class="fas fa-chevron-left font-bold"></i>
  <%= image_tag "face.jpg" , alt: "doug_photo" , class: 'avatar-small-square ml-3' %>
    <%= link_to '' , '/#tutorials' , class: 'nav-group-link' %>
</div>
<div class="container mt-3 mb-5">
  <div class="row">
    <div class="col-12 small-container">
      <h1 class='small-h1-header'>Side Scrolling Carousel</h1>
      <p class='m-0'><em>How to install Owl Carousel</em></p>

      <div class="tutorial-section">
        <p>There are a lot of steps (and copying and pasting) in order to setup Owl Carousel in your Rails application. Let's try to do it together.
        </p>
      </div>

      <div class="tutorial-section">
        <h3 class='small-h3-header'>Adding the package</h3>
        <p>Assuming you're using <code>yarn</code>, we'll add the package from Terminal:</p>
        <div class="code-wrapper">
          <% code('shell') do %>
yarn add owl.carousel
          <% end %>
        </div>
      </div>

      <div class="tutorial-section">
        <h3 class='small-h3-header'>Configuring the package</h3>
        <p>Now let's configure our JS for this package. Let's head to <code> javascript/packs/application.js</code></p>
        <p>There are two things we need to do here. First, let's import Owl Carousel</p>
        <div class="code-wrapper">
          <% code('javascript') do %>
// javascript/packs/application.js
import 'owl.carousel/dist/assets/owl.carousel.css';
import 'owl.carousel';
          <% end %>
        </div>
        <p>Second, we need to activate the Owl Carousel in the same file. Be careful, with this one. You might already have the <code>document.addEventListener</code> if you created the app with the Le Wagon templates. If that's the case, don't duplicate it, add it to the existing one.</p>
        <div class="code-wrapper">
          <% code('javascript') do %>
// be careful you *might* already have this listener
document.addEventListener('turbolinks:load', () => {
  $('.owl-carousel').owlCarousel({
    loop: true,
    margin: 10,
    responsive:{
      0:{
        items:1
       },
      600:{
        items:3
       },
      1000: {
        items: 5
      }
     },
     nav: true,
     navText: ["<i class='fa fa-chevron-left'></i>","<i class='fa fa-chevron-right'></i>"]
   })
});
          <% end %>
        </div>
        <p>Notice there are a few options can tweak in here. These are the default setting that I use. As you can see, you can choose the responsiveness and if you want the side arrows on your scrollable container.</p>
        <br>
        <p>Lastly, we need to attach jQuery to the window. I'm going under the assumption you've already installed jQuery for Bootstrap. Go to your <code>config/webpack/environment.js</code>. We need to add this line: <code>window.jQuery': 'jquery'</code>. It should look like this now:</p>
        <div class="code-wrapper">
          <% code('javascript') do %>
// config/webpack/environment.js
const { environment } = require('@rails/webpacker')

const webpack = require('webpack')
environment.plugins.prepend('Provide',
  new webpack.ProvidePlugin({
    $: 'jquery',
    jQuery: 'jquery',
    Popper: ['popper.js', 'default'],
    'window.jQuery': 'jquery'
  })
)
module.exports = environment
          <% end %>
        </div>
      </div>

      <div class="tutorial-section pb-0">
        <h3 class='small-h3-header'>Adding the style</h3>
        <p>Next, we need to make sure we're using the CSS that we were importing in our JS above. Let's head to our <code>app/views/layouts/application.html</code>. Let's add this into our <code>head</code></p>
        <div class="code-wrapper">
          <% code('erb') do %>
<!-- app/views/layouts/application.html -->

<%%= stylesheet_pack_tag 'application' %>
          <% end %>
        </div>
        <p>Lastly, we can add some style to the navigation arrows <strong>if you kept them active in the configuration</strong>. Feel free to change as you see fit. It's probably best to create a component in your </p>
        <div class="code-wrapper">
          <% code('scss') do %>
// app/assets/stylesheets/components/carousel.scss

.owl-carousel {
  display: flex;
  .owl-prev {
    position: absolute;
    top: 0;
    left: 0;
    height: 90%;
    font-size: 30px !important;
  }
  .owl-next {
    position: absolute;
    top: 0;
    right: 0;
    height: 90%;
    font-size: 30px !important;
  }
}
.owl-item.active:hover {
  cursor: grab;
}
          <% end %>
        </div>
      </div>

      <div class="tutorial-section">
        <h3 class='small-h3-header'>Adding it to the view</h3>
        <p>You need to add two classes to your parent container. The organization should look like this.</p>
        <p><strong>Make sure you've restarted your Rails server.</strong></p>
        <div class="code-wrapper">
          <% code('html') do %>
<div class="owl-carousel owl-theme">
  <div> Your Content </div>
  <div> Your Content </div>
  <div> Your Content </div>
  <div> Your Content </div>
  <div> Your Content </div>
  <div> Your Content </div>
  <div> Your Content </div>
</div>
          <% end %>
        </div>
        <p>But really it's probably best to build your interation into a partial.</p>
        <div class="code-wrapper">
          <% code('erb') do %>
<!-- app/views/XXXXXX/index.html.erb -->

<div class="owl-carousel owl-theme">
  <%% @lists.each do |list| %>
    <%%= render 'lists/card', list: list %>
  <%% end %>
</div>
          <% end %>
        </div>
      </div>
      <div class="tutorial-section">
        <h3 class='small-h3-header'>See it in action</h3>
        <a href="https://watchlist-doug.herokuapp.com/" target="_blank" class='link-gray'>Movie Watchlist Example</a>
      </divs>
    </div>
  </div>
</div>
